{"CLs":[{"__type":"LD","Id":"2f18e1b3-60a1-4105-a682-cd76006d15d0","Up":true,"Var":"HMI_Feeder_Data.Reset_Sequence"},{"__type":"LD","Id":"c3fbc6c3-b36e-4b06-89d0-ec443948c35a","Ix":1,"Up":true,"Var":"Update_Feeder_Sequences","Y":1},{"__type":"LD","Ix":2,"Var":"HMI_Feeder_Data.Recipe_Transfered","Y":2},{"__type":"IST","EID":"b1ffd9ab-f6b1-4566-8144-1590b23416f7","H":212.40000000000003,"Ix":3,"TXT":"Step_No := 0;","W":1034.3999999999999,"X":1}],"CMT":"When we change recipe or the user demands it we reset the sequence to the first step. Enable or disable steps based on the total number of steps.","LRI":4,"RRI":5,"VLs":[{"Ix":6,"X":1},{"Ix":6,"X":1,"Y":1}]}
{"CLs":[{"__type":"IST","EID":"85b13aa9-3dac-4c95-a900-943442e0d4b5","H":245.2,"TXT":"IF (Master_Feeder_Options.Sequential_Feeding) THEN\u000d\u000a\u0009IF NOT Master_Features.Recipe_Manager THEN\u000d\u000a\u0009\u0009Act_Sequences.No_Of_Steps := Sequence_Counter(Act_Sequences);\u000d\u000a\u0009END_IF;\u000d\u000a\u0009Sequence_No := Act_Sequences.No_Of_Steps;\u000d\u000aELSE\u000d\u000a\u0009Act_Sequences.No_Of_Steps := 0;\u000d\u000a\u0009Sequence_No := 0;\u000d\u000aEND_IF;","W":1016.8}],"LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"IST","EID":"702e29d7-73d4-40de-8c5f-317dab660c02","H":130,"TXT":"HMI_Feed_Seq.Nb_Step:=Sequence_No;\u000d\u000aHMI_Feed_Seq.Seq_Step:=Step_No;","W":808.80000000000018}],"LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"IST","EID":"e75f97d6-28bd-4b4e-9a99-fc979bc695c0","H":186.80000000000007,"TXT":"IF (Sequence_No > 0) THEN\u000d\u000a\u0009Sequence_Counting := TRUE;\u000d\u000aELSE\u000d\u000a\u0009Sequence_Counting := FALSE;\u000d\u000aEND_IF;\u000d\u000aFeeder_Signals.Sequence_Counting := Sequence_Counting;\u000d\u000a\u0009\u000d\u000aSequence_Inc := FALSE;","W":868}],"CMT":"Make sure Sequence_Inc stays true for only one PLC cycle. If we have more than one Feeder_Sequences then trigger sequential counting which counts Feeder_Sequences instead of press strokes.","LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"LD","Var":"HMI_Feeder_Data.Auto_Feeding"},{"__type":"LD","Ix":6,"Var":"Master_Feeder_Options.Sequential_Feeding","X":1},{"__type":"LD","Ix":3,"Var":"Master_Feeder_Options.Two_Feed_System","X":2},{"__type":"LD","Id":"1103ebc6-e6d5-4059-9a11-81e676810411","Ix":1,"Up":true,"Var":"Entry_Feed_Move.Done","X":3},{"__type":"LD","Id":"801c72b1-d4c1-4aa0-85c4-7fc78f91c7fc","Ix":2,"Up":true,"Var":"Exit_Feed_Done","X":3,"Y":1},{"__type":"LD","Ix":4,"Var":"Master_Feeder_Options.One_Feed_System","X":2,"Y":2},{"__type":"LD","Ix":7,"Not":true,"Var":"Master_Feeder_Options.Motion_Feeding","X":3,"Y":2},{"__type":"LD","Id":"9cdd92a3-0868-4a27-bcf2-5d893942370c","Ix":5,"Up":true,"Var":"Main_Feed_Move.Done","X":4,"Y":2},{"__type":"LD","Ix":9,"Var":"Master_Feeder_Options.Motion_Feeding","X":3,"Y":3},{"__type":"LD","Id":"9010417d-f0c8-4477-8767-290bd33b2f1c","Ix":8,"Up":true,"Var":"Main_Feed_Move_Motion.Done","X":4,"Y":3},{"__type":"HL","X":4},{"__type":"HL","X":4,"Y":1},{"__type":"IST","EID":"0f6693ec-79c1-42e9-8daf-b8ba2d71bf9d","H":451.60000000000014,"Ix":10,"TXT":"Step_No := Step_No +1;\u000d\u000a\u000d\u000aIF NOT (Step_No <= Sequence_No) AND\u000d\u000a\u0009\u0009(Sequence_No >= 0) THEN\u000d\u000a\u0009Step_No := 0;\u000d\u000a\u0009\u000d\u000a\u0009Feeder_Signals.Sequence_Finished := TRUE;\u000d\u000a\u0009\u000d\u000a\u0009\/\/ If we are feeding profiles then our sequence is finished and will not be repeating.\u000d\u000a\u0009IF (Master_Feeder_Options.Two_Feed_System) THEN\u000d\u000a\u0009\u0009(* Sequence is finished flag *)\u000d\u000a\u0009\u0009Sequence_Finished := TRUE;\u000d\u000a\u0009END_IF;\u000d\u000aEND_IF;","W":674.4,"X":5}],"CMT":"After each feed we move on to the next sequence, unless it is greater than the total number of Feeder_Sequences, then we restart.","LRI":11,"RRI":12,"VLs":[{"Ix":13,"X":3},{"Ix":14,"X":5},{"Ix":14,"X":5,"Y":1},{"Ix":14,"X":5,"Y":2},{"Ix":15,"X":2},{"Ix":15,"X":2,"Y":1},{"Ix":16,"X":3,"Y":2}]}
{"CLs":[{"__type":"LD","Ix":2,"Not":true,"Var":"Master_Feeder_Options.Wintriss_Feeder"},{"__type":"LD","Id":"59253d78-f4e9-47e6-b35e-348e00000019","Up":true,"Var":"Press_Signals.Feeding_Signal","X":1},{"__type":"LD","Id":"59253d78-f4e9-47e6-b35e-348e0000001c","Ix":1,"Up":true,"Var":"HMI_Feeder_Data.Reset_Sequence","Y":1},{"__type":"LD","Id":"59253d78-f4e9-47e6-b35e-348e0000002b","Ix":6,"Up":true,"Var":"Sequence_Transfered_Latch","Y":2},{"__type":"LD","Ix":3,"Var":"Master_Feeder_Options.Wintriss_Feeder","Y":3},{"__type":"LD","Id":"59253d78-f4e9-47e6-b35e-348e00000025","Ix":4,"Up":true,"Var":"S_Feeding","X":1,"Y":3},{"__type":"HL","X":1,"Y":1},{"__type":"HL","X":1,"Y":2},{"__type":"LD","Ix":5,"Var":"Master_Feeder_Options.Gag_Feeding","X":2},{"__type":"LD","Ix":7,"Not":true,"Var":"Pause_Feed","X":3},{"__type":"IST","EID":"b9efee06-02cd-4d7b-b0b8-8b35522c701f","H":130,"Ix":8,"TXT":"Recipe_Transfered_RT(Clk:=Sequence_Transfered_Latch);\u000d\u000a\u000d\u000a(* Determine what the next gag is. *)\u000d\u000a\/\/ If the recipe was transfered for the first time or we are repeating the same sequence\u000d\u000aIF (Step_No > Sequence_No+1) OR \u000d\u000a\u0009(Recipe_Transfered_RT.Q) THEN\u000d\u000a\u0009Next_Step := 0;\u000d\u000aELSE\u000d\u000a\u0009\/\/ Since we punch before we feed, and the first punch is activated from the start then we are offset of one from the\u000d\u000a\u0009\/\/ feeds in the sequence. \u000d\u000a\u0009\u0009Next_Step := Step_No+1;\u000d\u000a\u0009\u0009IF (Next_Step > Sequence_No) THEN\u000d\u000a\u0009\u0009\u0009Next_Step := 0;\u000d\u000a\u0009\u0009END_IF;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a\/\/ Acknowledge that the recipe was transfered as it should\u000d\u000aSequence_Transfered_Latch := FALSE;\u000d\u000a\u000d\u000a(* Activate the next gag *)\u000d\u000aIF (Next_Step >= 0) THEN\u000d\u000a\u0009(* Deactivate all gags but the current one *)\u000d\u000a\u0009FOR J := 0 TO 499 BY 1 DO\u000d\u000a\u0009\u0009IF (J <> Act_Sequences.Gag[Next_Step]) THEN\u000d\u000a\u0009\u0009\u0009Gags[J] := FALSE;\u000d\u000a\u0009\u0009END_IF;\u000d\u000a\u0009END_FOR;\u000d\u000a\u0009(* Activate the gag that corresponds to the current step *)\u000d\u000a\u0009IF (Act_Sequences.Gag[Next_Step] > 0) THEN\u000d\u000a\u0009\u0009\/\/Gets a list of gags to activate\u000d\u000a\u0009\u0009Strip_UINT(Act_Sequences.Gag[Next_Step],Gag_List);\u000d\u000a\u0009\u0009\/\/ Extract the two gags to activate in a list\u000d\u000a\u0009\u0009Gag_No_Extract(Gag_List, Gag_No);\u000d\u000a\u0009\u0009\/\/ Activate both gags selected\u000d\u000a\u0009\u0009Gags[Gag_No[0]] := TRUE;\u000d\u000a\u0009\u0009Gags[Gag_No[1]] := TRUE;\u000d\u000a\u0009ELSE\u000d\u000a\u0009\u0009Gags[Act_Sequences.Gag[Next_Step]] := FALSE;\u000d\u000a\u0009END_IF;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a(*If Gags[16] is activated, we need to trigger a top stop for the shear cycle to process*)\u000d\u000aIF(Gag_No[0]  = 16) OR (Gag_No[1] = 16) THEN\u000d\u000a\u0009\u0009T_Stop_Press_to_Shear := TRUE;\u000d\u000a\u0009\u0009Shear_Cycle := TRUE;\u000d\u000aELSE\u000d\u000a\u0009T_Stop_Press_to_Shear := FALSE;\u000d\u000a\u0009\u0009Shear_Cycle := FALSE;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a","W":400,"X":4}],"CMT":"Gags always have to be in front of the rest of the sequence since they are at each punch and not at each feed - unless we feed profiles.","LRI":9,"RRI":10,"VLs":[{"Ix":11,"X":2},{"Ix":11,"X":2,"Y":1},{"Ix":11,"X":2,"Y":2}]}
{"CLs":[{"__type":"IST","EID":"76231c6a-31fe-49b0-a094-da9b453a3b40","H":130,"TXT":"(*Unlatch the top stop signal when the press has stopped and is idle.*)\u000d\u000aIF (T_Stop_Press_to_Shear) AND (Press_Idle) THEN\u000d\u000a\u0009T_Stop_Press_to_Shear := FALSE;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a(*When the Gag[16] is active, we need to trigger a shear cycle after the feed has complete is move*)\u000d\u000aIF (Gags[16]) AND (Global_Feed_Completed) THEN\u000d\u000a\u0009Shear_Auto_Cycle_Enable := TRUE;\u000d\u000a\u0009END_IF;\u000d\u000a\u0009\u000d\u000aGlobal_Gags_16 := Gags[16] ;\u000d\u000a\u000d\u000a\u000d\u000a","W":400}],"LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"LD","Not":true,"Var":"Master_Feeder_Options.Wintriss_Feeder"},{"__type":"LD","Ix":1,"Var":"Press_Signals.Feeding_Signal","X":1},{"__type":"LD","Ix":2,"Var":"Master_Feeder_Options.Wintriss_Feeder","Y":1},{"__type":"LD","Ix":3,"Var":"S_Feeding","X":1,"Y":1},{"__type":"ST","Ix":4,"Var":"Feed_Active","X":2}],"CMT":"Load the appropriate data in the feeder based on where we are in the recipe.","LRI":5,"RRI":6,"VLs":[{"Ix":7,"X":2}]}
{"CLs":[{"__type":"IST","EID":"f48eb931-e748-4966-9e0e-6c163da78adf","H":692.99999999999977,"TXT":"Pause_Signal_R(Clk:=Feeder_IN_Pause_Signal);\u000d\u000aFeed_Active_R(Clk:=Feed_Active);\u000d\u000a\u000d\u000a\/\/ When a pause is demanded, wait for the correct conditions to pause the feeding and gags - set pause_wait consequently\u000d\u000a\/\/ Pause_Wait is always false if we lose the pause signal, Pause_Wait becomes false once we have actually paused\u000d\u000aPause_Wait := (Pause_Signal_R.Q OR Pause_Wait) AND Feeder_IN_Pause_Signal AND (NOT Pause_Feed);\u000d\u000a\u000d\u000a\/\/ If we are currently paused and we lose the signal then we have to unpause the feed\u000d\u000aUnpause_Wait := Pause_Feed AND (NOT Feeder_IN_Pause_Signal);\u000d\u000a\u000d\u000a\/\/ If we are just now entering the feed zone then we are ready to pause\/unpause\u000d\u000aIF (Feed_Active_R.Q) THEN\u000d\u000a\u0009IF (Pause_Wait) THEN\u000d\u000a\u0009\u0009Pause_Feed := TRUE;\u000d\u000a\u0009END_IF;\u000d\u000a\u0009IF (Unpause_Wait) THEN\u000d\u000a\u0009\u0009Pause_Feed := FALSE;\u000d\u000a\u0009END_IF;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a\/\/ Do not actually feed if we are in a pause state\u000d\u000aIF (Feed_Active) AND NOT (Pause_Feed) THEN\u000d\u000a\u0009HMI_Feeder_Data.Feed_Distance := Act_Sequences.Distance[Step_No];\u000d\u000a\u0009\/\/ If motion feeding is enable then wait for gearing to be completed before feeding\u000d\u000a\u0009Wait_For_Parameters := TRUE;\u000d\u000aEND_IF;","W":1294}],"CMT":"Determine when to pause or not.","LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"LD","Not":true,"Var":"Master_Feeder_Options.Wintriss_Feeder"},{"__type":"LD","Ix":1,"Not":true,"Var":"Press_Signals.Feeding_Signal","X":1},{"__type":"LD","Ix":2,"Var":"Master_Feeder_Options.Wintriss_Feeder","Y":1},{"__type":"LD","Ix":3,"Not":true,"Var":"S_Feeding","X":1,"Y":1},{"__type":"ST","Ix":4,"RS":true,"Var":"Wait_For_Parameters","X":2}],"LRI":5,"RRI":6,"VLs":[{"Ix":7,"X":2}]}
{"CLs":[{"__type":"IST","EID":"96b8405a-31cb-45e3-8aa9-eec1609e403f","H":72.400000000000148,"TXT":"Gag_Confirmation_Delay.PT := Frac_To_Time(HMI_Feeder_Data_Retained.Gag_Delay);","W":821.59999999999991}],"LRI":1,"RRI":2,"VLs":[]}
{"CLs":[{"__type":"LD","Id":"6c905533-1de9-43d3-8c63-08935816f45f","Up":true,"Var":"HMI_Feeder_Data.Reset_Sequence"},{"__type":"LD","Id":"8038bdc7-bbbe-4696-8e53-707e086c9a90","Ix":1,"Up":true,"Var":"HMI_Feeder_Data.Recipe_Transfered","Y":1},{"__type":"FB","In":[{"__type":"PF","Arg":"In"},{"__type":"PRM","Arg":"PT","Ix":2,"Type":"TIME","Var":""}],"Ix":4,"Name":"TP","Out":[{"__type":"PF","Arg":"Q"},{"__type":"PRM","Arg":"ET","Ix":3,"Type":"TIME","Var":""}],"X":1,"Var":"Gag_Confirmation_Delay"}],"CMT":"Provide a delay before giving an alarm because the gag has not correctly activated, and the others not correctly de-activated.","LRI":5,"RRI":6,"VLs":[{"Ix":7,"X":1}]}
{"CLs":[{"__type":"IST","EID":"b7e81b62-367f-415e-8a9b-b823e3dcfb40","H":252.6666666666668,"TXT":"HMI_Feeder_Data.Step_No := Step_No;","W":799.99999999999989}],"CMT":"HMI Communication","LRI":1,"RRI":2,"VLs":[]}
