{"CLs":[{"__type":"LD","Not":true,"Var":"Gag_Confirmation_Delay.Q"},{"__type":"LD","Ix":4,"Not":true,"Var":"Master_Feeder_Options.Wintriss_Feeder","X":1},{"__type":"LD","Ix":1,"Not":true,"Var":"Press_Signals.Feeding_Signal","X":2},{"__type":"LD","Ix":6,"Var":"Master_Feeder_Options.Wintriss_Feeder","X":1,"Y":1},{"__type":"LD","Ix":5,"Not":true,"Var":"S_Feeding","X":2,"Y":1},{"__type":"LD","Ix":2,"Not":true,"Var":"HMI_Feeder_Data.Manual_Feeding","X":3},{"__type":"LD","Ix":3,"Not":true,"Var":"Gag_Fault","X":4},{"__type":"LD","Ix":7,"Var":"Master_Feeder_Options.Gag_Feeding","X":5},{"__type":"ST","Ix":8,"Var":"Gag_Fault_Conditions","X":6}],"LRI":9,"RRI":10,"VLs":[{"Ix":11,"X":1},{"Ix":12,"X":3}]}
{"CLs":[{"__type":"LD","Var":"Gag_Fault_Conditions"},{"__type":"IST","EID":"7ba620e1-78aa-4016-834a-b0d78b7d0229","H":720.39999999999986,"Ix":1,"TXT":"Gag_Fault := FALSE;\u000d\u000aHMI_Feeder_Data.Gag_Fault_Msg := '';\u000d\u000a\u000d\u000aIF ((Sequence_No > 0) OR (Act_Sequences.Gag[0] <> 0)) \u000d\u000a\u0009AND (HMI_Die_Config.Gag_Confirmed) THEN\u000d\u000a\u0009(* Assure that the gag has activated as it should be *)\u000d\u000a\u0009FOR II:=1 TO No_Gags_Installed BY 1 DO\u000d\u000a\u0009\u0009\/\/ Do not validate that a gag is activated if our feed is currently paused\u000d\u000a\u0009\u0009IF ((Gags[II]) AND NOT (Pause_Feed)) AND HMI_Die_Config.Extend_Confirmed THEN\u000d\u000a\u0009\u0009\u0009(* Current gag has to be activated *)\u000d\u000a\u0009\u0009\u0009IF ((Gag_Pro[II] <> TRUE) OR (Gag_Ret[II] = TRUE)) THEN\u000d\u000a\u0009\u0009\u0009\u0009Gag_Fault := TRUE;\u000d\u000a\u0009\u0009\u0009\u0009\/\/ Make sure we do not go above the maximum length of the string\u000d\u000a\u0009\u0009\u0009\u0009IF (GetByteLen(HMI_Feeder_Data.Gag_Fault_Msg) < 200) THEN\u000d\u000a\u0009\u0009\u0009\u0009\u0009HMI_Feeder_Data.Gag_Fault_Msg := CONCAT(HMI_Feeder_Data.Gag_Fault_Msg, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009'Activate fail: ', INT_TO_STRING(II), ' ');\u000d\u000a\u0009\u0009\u0009\u0009END_IF;\u000d\u000a\u0009\u0009\u0009END_IF;\u000d\u000a\u0009\u0009ELSE\u000d\u000a\u0009\u0009\u0009(* All other gags must be deactivated *)\u000d\u000a\u0009\u0009\u0009\/\/ This is true even when we are paused, all gags must successfully deactivate\u000d\u000a\u0009\u0009\u0009IF ((Gag_Pro[II] = TRUE) OR (Gag_Ret[II] <> TRUE)) AND HMI_Die_Config.Retract_Confirmed THEN\u000d\u000a\u0009\u0009\u0009\u0009Gag_Fault := TRUE;\u000d\u000a\u0009\u0009\u0009\u0009\/\/ Make sure we do not go above the maximum length of the string\u000d\u000a\u0009\u0009\u0009\u0009IF (GetByteLen(HMI_Feeder_Data.Gag_Fault_Msg) < 200) THEN\u000d\u000a\u0009\u0009\u0009\u0009\u0009HMI_Feeder_Data.Gag_Fault_Msg := CONCAT(HMI_Feeder_Data.Gag_Fault_Msg, \u000d\u000a\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009'Deactivate fail: ', INT_TO_STRING(II), ' ');\u000d\u000a\u0009\u0009\u0009\u0009END_IF;\u000d\u000a\u0009\u0009\u0009END_IF;\u000d\u000a\u0009\u0009END_IF;\u000d\u000a\u0009END_FOR;\u000d\u000aELSIF (NOT HMI_Die_Config.Gag_Confirmed) THEN\u000d\u000a\u0009Gag_Fault := FALSE;\u000d\u000aEND_IF;","W":1134.4000000000003,"X":1}],"CMT":"If you lose your feed signal or the gag delay has been exhausted then give an alarm if the gag has not activated as it should.","LRI":2,"RRI":3,"VLs":[]}
{"CLs":[{"__type":"LD","Dwn":true,"Id":"971acefc-54b6-4ace-9bec-5289afa145f4","Var":"HMI_Feeder_Data.Alarms.Gag"},{"__type":"LD","Id":"8dcf0179-b0a8-423b-baf1-b0bb8191dcd6","Ix":1,"Up":true,"Var":"HMI_Data.Alarm_Reset","Y":1},{"__type":"IST","EID":"75018c2a-1f7c-40dd-a538-8f639a933209","H":130,"Ix":2,"TXT":"Gag_Fault_No := 0;\u000d\u000aGag_Fault := FALSE;","W":829.59999999999991,"X":1}],"LRI":3,"RRI":4,"VLs":[{"Ix":5,"X":1}]}
