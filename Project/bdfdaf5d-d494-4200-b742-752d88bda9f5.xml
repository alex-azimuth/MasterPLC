<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>(* Determine the direction to feed based on the signal, adjust the distance *)&#xD;
IF Fwd_Sig THEN&#xD;
	Signed_Distance := Distance;&#xD;
ELSIF Rev_Sig THEN&#xD;
	Signed_Distance := Distance*-1;&#xD;
END_IF;&#xD;
&#xD;
(* Convert or not from metric to imperial and output the correct unit string *)&#xD;
IF (NOT Unit) THEN&#xD;
	Distance_O := Adj_Feed(Signed_Distance*25.4, Adj_Fac);&#xD;
	&#xD;
	Accel_O := Imperial_To_Metric(Accel);&#xD;
	Decel_O := Imperial_To_Metric(Decel);&#xD;
	&#xD;
	Manual_Speed_C := Imperial_To_Metric(Speed);&#xD;
	&#xD;
	Unit_Str := 'in';&#xD;
ELSE&#xD;
	Distance_O := Adj_Feed(Signed_Distance, Adj_Fac);&#xD;
	&#xD;
	Manual_Speed_C := Speed;&#xD;
	Accel_O := Accel;&#xD;
	Decel_O := Decel;&#xD;
	&#xD;
	Manual_Speed_C := Speed;&#xD;
	&#xD;
	Unit_Str := 'mm';&#xD;
END_IF;&#xD;
&#xD;
&#xD;
// Limit the maximum speed to two inches per second in manual mode&#xD;
IF (NOT Micro_Mode) THEN&#xD;
	IF (Manual_Speed_C &lt; Manual_Limit) THEN&#xD;
		Speed_O := Manual_Speed_C;&#xD;
	ELSE&#xD;
		Speed_O := Manual_Limit;&#xD;
	END_IF;&#xD;
ELSE&#xD;
	// Limit the speed further when in micro&#xD;
	IF (Manual_Speed_C &lt; Manual_Limit_Micro) THEN&#xD;
		Speed_O := Manual_Speed_C;&#xD;
	ELSE&#xD;
		Speed_O := Manual_Limit_Micro;&#xD;
	END_IF;&#xD;
END_IF;&#xD;
</Text></StructuredTextModel>