<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>IF (NOT Execute) AND (NOT Busy) THEN&#xD;
	(* Will ensure that Done or Error are on at least one scan after busy = false *)&#xD;
	Stage := 0;&#xD;
	Error := FALSE;&#xD;
	Done := FALSE;&#xD;
END_IF;&#xD;
&#xD;
IF Stage = 0 THEN&#xD;
	IF (NOT Busy) AND Execute THEN&#xD;
		IF NoOfSDOs &lt;= SizeOfAry(NodeDat[0].SdoList) THEN&#xD;
			Busy := TRUE;&#xD;
			IxSDO := 0;&#xD;
			IxNode := LOWER_BOUND(NodeDat, 1);&#xD;
			Stage := 10;&#xD;
		ELSE&#xD;
			Stage := 90;&#xD;
		END_IF;&#xD;
	END_IF;&#xD;
END_IF;&#xD;
	&#xD;
IF Stage = 10 THEN&#xD;
	NodeFound := FALSE;&#xD;
	FOR i := IxNode TO UPPER_BOUND(NodeDat, 1) DO&#xD;
		IF NodeDat[i].InUse AND ((ExcludeEquals AND (NOT NodeDat[i].IsEqual_ReadDat_WriteDat)) OR (NOT ExcludeEquals)) THEN&#xD;
			IxNode := i;&#xD;
			NodeFound := TRUE;&#xD;
			EXIT;&#xD;
		END_IF;&#xD;
	END_FOR;&#xD;
	IF NodeFound THEN&#xD;
		IxSDO := 0;&#xD;
		Stage := 20;&#xD;
	ELSE&#xD;
		Stage := 100; (* Completed *)&#xD;
	END_IF;&#xD;
END_IF;&#xD;
&#xD;
IF Stage = 20 THEN&#xD;
	ParamFound := FALSE;&#xD;
	FOR j := IxSDO TO (NoOfSDOs - 1) DO&#xD;
		IF NodeDat[IxNode].SdoList[j].InUse AND ((ExcludeEquals AND (NOT NodeDat[i].SdoList[j].IsEqual_ReadDat_WriteDat)) OR (NOT ExcludeEquals)) THEN&#xD;
			IxSDO := j;&#xD;
			ParamFound := TRUE;&#xD;
			EXIT;&#xD;
		END_IF;&#xD;
	END_FOR;&#xD;
	IF ParamFound THEN&#xD;
		IF _EC_MBXSlavTbl[NodeDat[IxNode].NodeAdr] THEN&#xD;
			Stage := 30; (* Write Parameter *)&#xD;
		ELSE&#xD;
			Stage := 90;&#xD;
		END_IF;&#xD;
	ELSE&#xD;
		Inc(IxNode);&#xD;
		Stage := 10; (* Find next Node *)&#xD;
	END_IF;&#xD;
END_IF;&#xD;
&#xD;
IF Stage = 30 THEN&#xD;
	iEC_CoESDOWrite(Execute := FALSE, WriteDat := NodeDat[IxNode].SdoList[IxSDO].WriteDat);&#xD;
	Stage := 40;&#xD;
END_IF;&#xD;
&#xD;
IF Stage = 40 THEN&#xD;
	iEC_CoESDOWrite(Execute := TRUE, NodeAdr := NodeDat[IxNode].NodeAdr, SdoObj := NodeDat[IxNode].SdoList[IxSDO].SdoObj, WriteDat := NodeDat[IxNode].SdoList[IxSDO].WriteDat, WriteSize := NodeDat[IxNode].SdoList[IxSDO].Value_Size);&#xD;
	IF iEC_CoESDOWrite.Done THEN&#xD;
		Inc(IxSDO);&#xD;
		Stage := 20;&#xD;
	END_IF;&#xD;
	IF iEC_CoESDOWrite.Error THEN&#xD;
		ErrorID := iEC_CoESDOWrite.ErrorID;&#xD;
		AbortCode := iEC_CoESDOWrite.AbortCode;&#xD;
		Stage := 90; (* Error *)&#xD;
	END_IF;&#xD;
END_IF;&#xD;
&#xD;
&#xD;
IF Stage = 90 THEN&#xD;
	(* Error *)&#xD;
	Error := TRUE;&#xD;
	Done := FALSE;&#xD;
	Busy := FALSE;&#xD;
END_IF;&#xD;
&#xD;
IF Stage = 100 THEN&#xD;
	(* Completed *)&#xD;
	Error := FALSE;&#xD;
	Done := TRUE;&#xD;
	Busy := FALSE;&#xD;
END_IF;</Text></StructuredTextModel>