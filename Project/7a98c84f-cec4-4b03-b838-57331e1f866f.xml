<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>IF (Activate) THEN&#xD;
	(* Provide a 0 reference point for the raw analog tonnage values *)&#xD;
	Anal_Offset_Val1 := Analog_Value1-Offset_T_1;&#xD;
	Anal_Offset_Val2 := Analog_Value2-Offset_T_2;&#xD;
	&#xD;
	(* Make sure the values cannot go below zero due to the offsets *)&#xD;
	IF (Anal_Offset_Val1 &lt; 0) THEN&#xD;
		Anal_Offset_Val1 := 0;&#xD;
	END_IF;&#xD;
	IF (Anal_Offset_Val2 &lt;0) THEN&#xD;
		Anal_Offset_Val2 := 0;&#xD;
	END_IF;&#xD;
	&#xD;
	Half_Out1 := 0;&#xD;
	Half_Out2 := 0;&#xD;
&#xD;
	(* Determine the range in which our raw analog value is situated and thereby infer the tonnage - tonnage starts at 10 up to 100 so is index+10 *)&#xD;
	FOR J := 89 TO 0 BY -1 DO&#xD;
		IF (Anal_Offset_Val1 &lt;= Tonnage_Data1[J-1]) AND (Anal_Offset_Val1 &gt;= Tonnage_Data1[J]) THEN&#xD;
			Temp_Val := 89-J;&#xD;
			Half_Out1 := (ABS(Temp_Val))+10;&#xD;
		END_IF;&#xD;
		IF (Anal_Offset_Val2 &lt;= Tonnage_Data2[J]) AND (Anal_Offset_Val2 &gt;= Tonnage_Data2[J+1]) THEN&#xD;
			Temp_Val2 := 89-J;&#xD;
			Half_Out2 := (ABS(Temp_Val2))+10;&#xD;
		END_IF;&#xD;
	END_FOR;&#xD;
	&#xD;
	(* If we are larger than the largest value in our array then consider we are at the max 50 ton *)&#xD;
	IF (Anal_Offset_Val1 &gt; Tonnage_Data1[0]) THEN&#xD;
		Half_Out1 := 50;&#xD;
	END_IF;&#xD;
	IF (Anal_Offset_Val2 &gt; Tonnage_Data2[0]) THEN&#xD;
		Half_Out2 := 50;&#xD;
	END_IF;&#xD;
&#xD;
	(* Divide the tonnage on each side by two and add them together for complete tonnage info *)&#xD;
	Act_Ton_Metric :=((Half_Out1)/2)+((Half_Out2)/2);&#xD;
	(* Convert from metric to imperial *)&#xD;
	Act_Ton_Imperial := INT_TO_LREAL(Act_Ton_Metric)*1.10231;&#xD;
	&#xD;
	Act_Ton_LREAL := Act_Ton_Imperial;&#xD;
	&#xD;
	(* Set minimum and maximum values *)&#xD;
	IF (Act_Ton_Imperial &gt; 99) THEN&#xD;
		Act_Ton := '&gt;99';&#xD;
	ELSIF (Act_Ton_Imperial &lt; 10) THEN&#xD;
		Act_Ton := '&lt;10';&#xD;
	ELSE&#xD;
		Act_Ton := LrealToFormatString(Act_Ton_Imperial, FALSE, FALSE, 16, 0);&#xD;
	END_IF;&#xD;
	&#xD;
	Done := TRUE;&#xD;
END_IF;</Text></StructuredTextModel>