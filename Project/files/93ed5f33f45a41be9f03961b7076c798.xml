<CodeEditorModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.DeviceHmi.CodeEditor.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><CodingLanguageName>VBNET</CodingLanguageName><HiddenFooter>&#xD;
End Class</HiddenFooter><HiddenHeader>Partial Public Class RecipeComposition&#xD;
</HiddenHeader><Text>'**********************************************************************&#xD;
'* Omron標準IAG&#xD;
'*作成日：2014/6/26&#xD;
'*作成者：Omron&#xD;
'*&#xD;
'*「レシピ複合IAG」&#xD;
'*以下の機能を１部品として実装する&#xD;
'*・追加&#xD;
'*・保存(選択レシピ)&#xD;
'*・名前を付けて保存&#xD;
'*・削除&#xD;
'*・インポート&#xD;
'*・全て保存&#xD;
'*・PLCへ書込み&#xD;
'*・PLCから読出し&#xD;
'*&#xD;
'**********************************************************************&#xD;
&#xD;
'レシピインスタンス追加&#xD;
Sub RecipeAdd()&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'**********************************************************************	&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'追加処理&#xD;
	'**********************************************************************&#xD;
	AddRecipe(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName),NewInstanceName)	&#xD;
End Sub&#xD;
&#xD;
'レシピインスタンス保存(選択されたテンプレート保存)&#xD;
Sub RecipeSave()&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'**********************************************************************	&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'保存処理&#xD;
	'**********************************************************************&#xD;
	SaveRecipe(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName),GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName))	&#xD;
End Sub&#xD;
&#xD;
'インスタンスに名前をつけて保存(選択インスタンスのコピーに名前をつけて追加)&#xD;
Sub RecipeSaveAs()&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'**********************************************************************	&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'保存(追加)処理&#xD;
	'**********************************************************************&#xD;
	SaveRecipeAs(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName),GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName),NewInstanceName)	&#xD;
End Sub&#xD;
&#xD;
'レシピインスタンスの削除&#xD;
Sub RecipeDelete()&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
	Dim SelectRecipeInstanceName As String&#xD;
	'**********************************************************************	&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'**********************************************************************	&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	SelectRecipeInstanceName = GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Or SelectRecipeInstanceName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'削除処理&#xD;
	'**********************************************************************&#xD;
	DeleteRecipe(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName),GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName))	&#xD;
End Sub&#xD;
&#xD;
'レシピファイルインポート&#xD;
Sub RecipeImport()&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
&#xD;
	'**********************************************************************&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'GetSelectedRecipeTemplateで選択テンプレートが取得できない場合は中止&#xD;
	'**********************************************************************&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
	&#xD;
	'**********************************************************************&#xD;
	'レシピデータのインポート&#xD;
	'**********************************************************************	&#xD;
	ImportRecipes(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName),PathAndFileName)	&#xD;
End Sub&#xD;
&#xD;
'テンンプレート内インスタンスデータを全て保存&#xD;
Sub SaveRecipeAllTemplate&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
&#xD;
	'**********************************************************************&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'GetSelectedRecipeTemplateで選択テンプレートが取得できない場合は中止&#xD;
	'**********************************************************************&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
&#xD;
	'**********************************************************************&#xD;
	'レシピテンプレートデータの保存&#xD;
	'**********************************************************************	&#xD;
	SaveAllRecipes(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName))&#xD;
End Sub&#xD;
&#xD;
'PLCへ書込み&#xD;
Sub Recipe_WritetoConttoller()&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
	Dim SelectRecipeInstanceName As String&#xD;
	'**********************************************************************	&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'**********************************************************************	&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	SelectRecipeInstanceName = GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Or SelectRecipeInstanceName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'転送(NA→PLC)処理&#xD;
	'**********************************************************************&#xD;
	WriteRecipeToController(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName),GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName))	&#xD;
End Sub&#xD;
&#xD;
'PLCから読出し&#xD;
Sub Recipe_ReadFromConttoller()&#xD;
	'**********************************************************************	&#xD;
	'内部変数宣言&#xD;
	'**********************************************************************&#xD;
	Dim SelectRecipeTemplateName As String&#xD;
	Dim SelectRecipeInstanceName As String&#xD;
	'**********************************************************************	&#xD;
	'レシピビューワ内選択テンプレート取得&#xD;
	'**********************************************************************	&#xD;
	SelectRecipeTemplateName = GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName)&#xD;
	SelectRecipeInstanceName = GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName)&#xD;
	If SelectRecipeTemplateName = "" Or SelectRecipeInstanceName = "" Then&#xD;
		Exit Sub&#xD;
	End If&#xD;
&#xD;
	'**********************************************************************	&#xD;
	'転送(PLC→NA)処理&#xD;
	'**********************************************************************&#xD;
	ReadRecipeFromController(GetSelectedRecipeTemplate(_HMI_CurrentPage,RecipeObjName),GetSelectedRecipe(_HMI_CurrentPage,RecipeObjName))	&#xD;
End Sub</Text></CodeEditorModel>