{"CLs":[{"__type":"IST","EID":"4f9661c9-eeb5-42d0-958f-407c929c1ee0","H":530.80000000000007,"TXT":"\/\/ Store the last value of ET in Time_R\u000d\u000aIF (P_First_Run) THEN\u000d\u000a\u0009Time_R := ET;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a\/\/ Current ET is the ET saved with the retained plus the current value with the timer\u000d\u000aET := ADD_TIME(Time_R, Accumulator.ET);\u000d\u000a\u000d\u000a\/\/ If we have a reset then reset the retained timer\u000d\u000aIF (Reset) THEN\u000d\u000a\u0009Time_R := T#0s;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a\/\/ Trigger the output if we go above the set time and prevent the accumulator timer from continuing\u000d\u000aIF (ET > PT) THEN\u000d\u000a\u0009OUT := TRUE;\u000d\u000aELSE\u000d\u000a\u0009OUT := FALSE;\u000d\u000aEND_IF;\u000d\u000a\u000d\u000a\/\/ Start the accumulator if we have not ran out of time and reset it when necessary\u000d\u000aAccumulator(IN:=(Enable AND (NOT OUT)), PT:=T#5000d, Reset:=Reset, ET=>Current_Time);","W":1249.6000000000001}],"CMT":"Output - Merge two times together, the one that is retained with the one of the timer.","LRI":1,"RRI":2,"VLs":[]}
